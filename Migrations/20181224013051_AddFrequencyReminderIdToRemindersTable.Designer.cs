// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Remind.Helpers;

namespace Remind.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20181224013051_AddFrequencyReminderIdToRemindersTable")]
    partial class AddFrequencyReminderIdToRemindersTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Remind.Entities.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("NotificationTypes");
                });

            modelBuilder.Entity("Remind.Entities.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("RemindAt");

                    b.Property<int>("ReminderFrequencyId");

                    b.Property<string>("Url");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ReminderFrequencyId");

                    b.HasIndex("UserId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Remind.Entities.ReminderFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("NumberOfDays");

                    b.HasKey("Id");

                    b.ToTable("ReminderFrequency");
                });

            modelBuilder.Entity("Remind.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<int?>("ReminderFrequencyId");

                    b.Property<int>("UserNotificationTypeId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("ReminderFrequencyId");

                    b.HasIndex("UserNotificationTypeId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Remind.Entities.UserNotificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NotificationTypeId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("NotificationTypeId");

                    b.ToTable("UserNotificationTypes");
                });

            modelBuilder.Entity("Remind.Entities.Reminder", b =>
                {
                    b.HasOne("Remind.Entities.ReminderFrequency", "ReminderFrequency")
                        .WithMany()
                        .HasForeignKey("ReminderFrequencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Remind.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Remind.Entities.User", b =>
                {
                    b.HasOne("Remind.Entities.ReminderFrequency", "ReminderFrequency")
                        .WithMany()
                        .HasForeignKey("ReminderFrequencyId");

                    b.HasOne("Remind.Entities.UserNotificationType", "UserNotificationType")
                        .WithOne()
                        .HasForeignKey("Remind.Entities.User", "UserNotificationTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Remind.Entities.UserNotificationType", b =>
                {
                    b.HasOne("Remind.Entities.NotificationType", "NotificationType")
                        .WithMany()
                        .HasForeignKey("NotificationTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
